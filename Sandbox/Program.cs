namespace Sandbox
{
    using System;
    using System.Diagnostics;
    using System.IO;
    using NUnit.Framework;
    using VanceStubbs;
    using VanceStubbs.Tests.Types;

    public class Program
    {
        public static void Main()
        {
            var peverifyPath = @"C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.6.1 Tools\PEVerify.exe";
            if (!File.Exists(peverifyPath))
            {
                Console.WriteLine("PEVerify.exe not found at the given path, verification skipped");
                peverifyPath = null;
            }

            try
            {
                Func<ISimpleInterface, int, ISimpleInterface> f = VanceStubbs.ProxyFactory
                    .For<ISimpleInterface>()
                    .WithState<int>()
                    .WithPostEntryHandler((ISimpleInterface @this, int state, object[] parameters) =>
                    {
                        if (parameters.Length >= 1 && parameters[0] is int x)
                        {
                            parameters[0] = x + 1;
                        }
                    })
                    .Create();
                var v = new SimpleInterfaceImplementation();
                var proxy = f(v, 0);
                Assert.AreEqual(51, proxy.PassThrough(50));
            }
            finally
            {
                DynamicAssembly.Default.Save();
                if (peverifyPath != null)
                {
                    var process = Process.Start(new ProcessStartInfo(peverifyPath)
                    {
                        Arguments = "stubsautogenerated.dll",
                        CreateNoWindow = false,
                        UseShellExecute = false
                    });
                }
            }
        }
    }
}
